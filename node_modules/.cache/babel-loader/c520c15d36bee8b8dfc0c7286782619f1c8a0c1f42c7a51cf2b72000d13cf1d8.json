{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mikes\\\\cardverse\\\\src\\\\pages\\\\SearchPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport SearchBar from '../components/SearchBar';\nimport Card from '../components/Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SearchPage() {\n  _s();\n  const [query, setQuery] = useState('');\n  const [cards, setCards] = useState([]);\n  const handleSearch = async e => {\n    e.preventDefault();\n    if (!query.trim()) return;\n    try {\n      const res = await fetch(`https://api.scryfall.com/cards/named?exact=${encodeURIComponent(query.trim())}`);\n      const data = await res.json();\n      if (data.object === 'error') {\n        alert('Card not found');\n        setCards([]);\n        return;\n      }\n      setCards([data]);\n    } catch (error) {\n      alert('Error fetching card data');\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      query: query,\n      setQuery: setQuery,\n      handleSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6\",\n      children: cards.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-center text-gray-500\",\n        children: \"No cards loaded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6\",\n        children: cards.map(card => /*#__PURE__*/_jsxDEV(Card, {\n          card: card\n        }, card.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(SearchPage, \"nCH/y8eoKmrod4Pga4fASfNqfDY=\");\n_c = SearchPage;\nvar _c;\n$RefreshReg$(_c, \"SearchPage\");","map":{"version":3,"names":["React","useState","SearchBar","Card","jsxDEV","_jsxDEV","SearchPage","_s","query","setQuery","cards","setCards","handleSearch","e","preventDefault","trim","res","fetch","encodeURIComponent","data","json","object","alert","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","map","card","id","_c","$RefreshReg$"],"sources":["C:/Users/mikes/cardverse/src/pages/SearchPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport SearchBar from '../components/SearchBar';\r\nimport Card from '../components/Card';\r\n\r\nexport default function SearchPage() {\r\n  const [query, setQuery] = useState('');\r\n  const [cards, setCards] = useState([]);\r\n\r\n  const handleSearch = async (e) => {\r\n    e.preventDefault();\r\n    if (!query.trim()) return;\r\n\r\n    try {\r\n      const res = await fetch(\r\n        `https://api.scryfall.com/cards/named?exact=${encodeURIComponent(query.trim())}`\r\n      );\r\n      const data = await res.json();\r\n      if (data.object === 'error') {\r\n        alert('Card not found');\r\n        setCards([]);\r\n        return;\r\n      }\r\n      setCards([data]);\r\n    } catch (error) {\r\n      alert('Error fetching card data');\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <SearchBar\r\n        query={query}\r\n        setQuery={setQuery}\r\n        handleSearch={handleSearch}\r\n      />\r\n\r\n      <div className=\"mt-6\">\r\n        {cards.length === 0 ? (\r\n          <p className=\"text-center text-gray-500\">No cards loaded</p>\r\n        ) : (\r\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6\">\r\n            {cards.map((card) => (\r\n              <Card key={card.id} card={card} />\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,IAAI,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,eAAe,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACnC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMW,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAACN,KAAK,CAACO,IAAI,CAAC,CAAC,EAAE;IAEnB,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CACrB,8CAA8CC,kBAAkB,CAACV,KAAK,CAACO,IAAI,CAAC,CAAC,CAAC,EAChF,CAAC;MACD,MAAMI,IAAI,GAAG,MAAMH,GAAG,CAACI,IAAI,CAAC,CAAC;MAC7B,IAAID,IAAI,CAACE,MAAM,KAAK,OAAO,EAAE;QAC3BC,KAAK,CAAC,gBAAgB,CAAC;QACvBX,QAAQ,CAAC,EAAE,CAAC;QACZ;MACF;MACAA,QAAQ,CAAC,CAACQ,IAAI,CAAC,CAAC;IAClB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdD,KAAK,CAAC,0BAA0B,CAAC;MACjCE,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;EAED,oBACElB,OAAA;IAAAoB,QAAA,gBACEpB,OAAA,CAACH,SAAS;MACRM,KAAK,EAAEA,KAAM;MACbC,QAAQ,EAAEA,QAAS;MACnBG,YAAY,EAAEA;IAAa;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC,eAEFxB,OAAA;MAAKyB,SAAS,EAAC,MAAM;MAAAL,QAAA,EAClBf,KAAK,CAACqB,MAAM,KAAK,CAAC,gBACjB1B,OAAA;QAAGyB,SAAS,EAAC,2BAA2B;QAAAL,QAAA,EAAC;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,gBAE5DxB,OAAA;QAAKyB,SAAS,EAAC,qEAAqE;QAAAL,QAAA,EACjFf,KAAK,CAACsB,GAAG,CAAEC,IAAI,iBACd5B,OAAA,CAACF,IAAI;UAAe8B,IAAI,EAAEA;QAAK,GAApBA,IAAI,CAACC,EAAE;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAe,CAClC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IACN;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACtB,EAAA,CA9CuBD,UAAU;AAAA6B,EAAA,GAAV7B,UAAU;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}